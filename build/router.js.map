{"version":3,"sources":["router.js"],"names":["module","exports","init","app","config","expressVueMiddleware","vueOptions","use","json","urlencoded","extended","static","router","Router","controllers","sync","root","forEach","controller","console","log","require","default","req","res","data","title","head","statusCode","renderVue","onError","error","next","debug","env","errorCode","code","stack"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEAA,OAAOC,OAAP,CAAeC,IAAf,GAAsB,UAAUC,GAAV,EAAeC,MAAf,EAAuB;AAC3C;;AAEA,MAAMC,uBAAuB,qBAAWH,IAAX,CAAgBE,OAAOE,UAAvB,CAA7B;AACAH,MAAII,GAAJ,CAAQF,oBAAR;;AAEAF,MAAII,GAAJ,CAAQ,qBAAWC,IAAX,EAAR;AACAL,MAAII,GAAJ,CAAQ,qBAAWE,UAAX,CAAsB;AAC5BC,cAAU;AADkB,GAAtB,CAAR;;AAIAP,MAAII,GAAJ,CAAQ,SAAR,EAAmB,kBAAQI,MAAR,CAAe,QAAf,CAAnB;;AAEA;;AAEA,MAAIC,SAAS,kBAAQC,MAAR,EAAb;;AAEA,MAAIC,cAAc,eAAKC,IAAL,CAAUX,OAAOY,IAAP,GAAc,iBAAxB,CAAlB;AACAF,cAAYG,OAAZ,CAAoB,UAAUC,UAAV,EAAsB;AACxCC,YAAQC,GAAR,CAAY,QAAQF,UAAR,GAAqB,KAAjC;AACAG,YAAQH,UAAR,EAAoBI,OAApB,CAA4BV,MAA5B;AACD,GAHD;;AAKAT,MAAII,GAAJ,CAAQ,GAAR,EAAaK,MAAb;;AAEA;;AAEAT,MAAII,GAAJ,CAAQ,UAACgB,GAAD,EAAMC,GAAN,EAAc;AACpB,QAAMC,OAAO;AACXC,aAAO;AADI,KAAb;AAGA,QAAMpB,aAAa;AACjBqB,YAAM;AACJD,eAAO;AADH;AADW,KAAnB;AAKAF,QAAII,UAAJ,GAAiB,GAAjB;AACAJ,QAAIK,SAAJ,CAAc,WAAd,EAA2BJ,IAA3B,EAAiCnB,UAAjC;AACD,GAXD;;AAaAH,MAAII,GAAJ,CAAQ,SAASuB,OAAT,CAAkBC,KAAlB,EAAyBR,GAAzB,EAA8BC,GAA9B,EAAmCQ,IAAnC,EAAyC;AAC/CR,QAAII,UAAJ,GAAiB,GAAjB;AACA,QAAIH,OAAO;AACTQ,aAAO7B,OAAO8B,GAAP,KAAe,aADb;AAETC,iBAAWJ,MAAMK,IAFR;AAGTL,aAAOA,MAAMM;AAHJ,KAAX;;AAMA,QAAIb,IAAII,UAAR,EAAoB;AAClBJ,UAAIK,SAAJ,CAAc,WAAd,EAA2BJ,IAA3B;AACD,KAFD,MAEO;AACLO;AACD;AACF,GAbD;AAcD,CAtDD","file":"router.js","sourcesContent":["import express from 'express'\r\nimport expressVue from 'express-vue'\r\nimport glob from 'glob'\r\nimport bodyParser from 'body-parser'\r\n\r\nmodule.exports.init = function (app, config) {\r\n  // setup middleware\r\n\r\n  const expressVueMiddleware = expressVue.init(config.vueOptions)\r\n  app.use(expressVueMiddleware)\r\n\r\n  app.use(bodyParser.json())\r\n  app.use(bodyParser.urlencoded({\r\n    extended: true\r\n  }))\r\n\r\n  app.use('/static', express.static('static'))\r\n\r\n  // register routes\r\n\r\n  let router = express.Router()\r\n\r\n  let controllers = glob.sync(config.root + '/routes/**/*.js')\r\n  controllers.forEach(function (controller) {\r\n    console.log(' + ' + controller + '...')\r\n    require(controller).default(router)\r\n  })\r\n\r\n  app.use('/', router)\r\n\r\n  // 404 and Error handler\r\n\r\n  app.use((req, res) => {\r\n    const data = {\r\n      title: 'Error 404'\r\n    }\r\n    const vueOptions = {\r\n      head: {\r\n        title: 'Error 404'\r\n      }\r\n    }\r\n    res.statusCode = 404\r\n    res.renderVue('error.vue', data, vueOptions)\r\n  })\r\n\r\n  app.use(function onError (error, req, res, next) {\r\n    res.statusCode = 500\r\n    let data = {\r\n      debug: config.env === 'development',\r\n      errorCode: error.code,\r\n      error: error.stack\r\n    }\r\n\r\n    if (res.statusCode) {\r\n      res.renderVue('error.vue', data)\r\n    } else {\r\n      next()\r\n    }\r\n  })\r\n}\r\n"]}