{"version":3,"sources":["net/clientConnection.js"],"names":["ClientConnection","user","socket","onClose","on","onMessage","bind","onError","json","answer","payload","sendMessage","message","JSON","parse","e","console","log","stringify","action","close","error","err"],"mappings":";;;;;;;;;;IAAMA,gB;AACJ,4BAAaC,IAAb,EAAmBC,MAAnB,EAA2BC,OAA3B,EAAoC;AAAA;;AAClC,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;;AAEAA,WAAOE,EAAP,CAAU,SAAV,EAAqB,KAAKC,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAArB;AACAJ,WAAOE,EAAP,CAAU,OAAV,EAAmBD,OAAnB;AACAD,WAAOE,EAAP,CAAU,OAAV,EAAmB,KAAKG,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAnB;AACD;;AAED;;;;;sCACmBE,I,EAAM;AAAA;;AACvB,UAAIC,SAAS,SAATA,MAAS,CAACC,OAAD,EAAa;AACxBF,aAAKE,OAAL,GAAeA,OAAf;AACA,cAAKC,WAAL,CAAiBH,IAAjB;AACD,OAHD;AAIA,aAAOC,OAAOH,IAAP,CAAY,IAAZ,CAAP;AACD;;;8BAEUM,O,EAAS;AAClB,UAAI;AACF,YAAIJ,OAAOK,KAAKC,KAAL,CAAWF,OAAX,CAAX;AACD,OAFD,CAEE,OAAOG,CAAP,EAAU;AACV,aAAKR,OAAL,CAAa,+BAA+BQ,CAA5C;AACD;;AAEDC,cAAQC,GAAR,CAAY,KAAKhB,IAAL,GAAY,IAAZ,GAAmBY,KAAKK,SAAL,CAAeV,IAAf,CAA/B;;AAEA,cAAQA,KAAKW,MAAb;AAGD;;;4BAEQ;AACP,WAAKjB,MAAL,CAAYkB,KAAZ;AACD;;;4BAEQC,K,EAAO;AACdL,cAAQM,GAAR,CAAY,KAAKrB,IAAL,GAAY,IAAZ,GAAmBoB,KAA/B;AACD;;;;;;kBAGYrB,gB","file":"clientConnection.js","sourcesContent":["class ClientConnection {\r\n  constructor (user, socket, onClose) {\r\n    this.user = user\r\n    this.socket = socket\r\n\r\n    socket.on('message', this.onMessage.bind(this))\r\n    socket.on('close', onClose)\r\n    socket.on('error', this.onError.bind(this))\r\n  }\r\n\r\n  // Returns an answer-function. This preserves the response-token\r\n  getAnswerFunction (json) {\r\n    var answer = (payload) => {\r\n      json.payload = payload\r\n      this.sendMessage(json)\r\n    }\r\n    return answer.bind(this)\r\n  }\r\n\r\n  onMessage (message) {\r\n    try {\r\n      var json = JSON.parse(message)\r\n    } catch (e) {\r\n      this.onError('Received invalid message: ' + e)\r\n    }\r\n\r\n    console.log(this.user + ': ' + JSON.stringify(json))\r\n\r\n    switch (json.action) {\r\n      // Handle all the shit\r\n    }\r\n  }\r\n\r\n  close () {\r\n    this.socket.close()\r\n  }\r\n\r\n  onError (error) {\r\n    console.err(this.user + ': ' + error)\r\n  }\r\n}\r\n\r\nexport default ClientConnection\r\n"]}