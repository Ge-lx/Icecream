{"version":3,"sources":["main.js"],"names":["CONFIG","env","process","NODE_ENV","root","__dirname","port","vueOptions","rootPath","join","head","styles","style","metas","name","content","db","userDB","session","moodleDB","secret","resave","saveUninitialized","cookie","path","httpOnly","maxAge","app","locals","ENV","ENV_DEVELOPMENT","ROOT_PATH","console","log","init","Promise","resolve","reject","server","createServer","startServer","listen","on","then","catch","error","syscall","code","bind_port","exit","stop","stopServer","Array"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,SAAS;AACbC,OAAKC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aADhB;AAEbC,QAAMC,SAFO;AAGbC,QAAM,IAHO;AAIbC,cAAY;AACVC,cAAU,eAAKC,IAAL,CAAUJ,SAAV,EAAqB,QAArB,CADA;AAEV;AACAK,UAAM;AACJC,cAAQ,CAAC,EAAEC,OAAO,mBAAT,EAAD,CADJ;AAEJC,aAAO,CACL,EAAEC,MAAM,UAAR,EAAoBC,SAAS,yDAA7B,EADK;AAFH;AAHI,GAJC;AAcbC,MAAI;AACFC,YAAQ,UADN;AAEFC,aAAS,YAFP;AAGFC,cAAU;AAHR,GAdS;AAmBbD,WAAS;AACPE,YAAQ,kBADD;AAEPC,YAAQ,KAFD;AAGPC,uBAAmB,KAHZ;AAIPC,YAAQ;AACNC,YAAM,GADA;AAENC,gBAAU,IAFJ;AAGNC,cAAQ,MAAM,EAAN,GAAW,IAAX,GAAkB,IAHpB,CAGyB;AAHzB;AAJD;AAnBI,CAAf;;AA+BA,IAAIC,MAAM,wBAAV;;AAEAA,IAAIC,MAAJ,CAAWC,GAAX,GAAiB7B,OAAOC,GAAxB;AACA0B,IAAIC,MAAJ,CAAWE,eAAX,GAA8B9B,OAAOC,GAAP,KAAe,aAA7C;AACA0B,IAAIC,MAAJ,CAAWpB,QAAX,GAAsBN,QAAQD,GAAR,CAAY8B,SAAlC;;AAEAC,QAAQC,GAAR,CAAY,0CAAZ;AACA,iBAAOC,IAAP,CAAYP,GAAZ,EAAiB3B,MAAjB;AACAgC,QAAQC,GAAR,CAAY,SAAZ;;AAEA;AACAD,QAAQC,GAAR,CAAY,oBAAZ;;AAEA,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/B,MAAIC,SAAS,eAAKC,YAAL,CAAkBZ,GAAlB,CAAb;;AAEA,sBAAUa,WAAV,CAAsBF,MAAtB,EAA8BtC,MAA9B,EAH+B,CAGO;;AAEtCsC,SAAOG,MAAP,CAAczC,OAAOM,IAArB;AACAgC,SAAOI,EAAP,CAAU,OAAV,EAAmBL,MAAnB;AACAC,SAAOI,EAAP,CAAU,WAAV,EAAuBN,OAAvB;AACD,CARD,EAQGO,IARH,CAQQ,YAAM;AACZX,UAAQC,GAAR,gCAAyCjC,OAAOC,GAAhD,8BAA4ED,OAAOM,IAAnF;AACD,CAVD,EAUGsC,KAVH,CAUS,UAACC,KAAD,EAAW;AAClB,MAAIA,MAAMC,OAAN,KAAkB,QAAtB,EAAgC;AAC9B,UAAMD,KAAN;AACD;AACD;AACA,UAAQA,MAAME,IAAd;AACE,SAAK,QAAL;AACEf,cAAQa,KAAR,CAAc,UAAU7C,OAAOgD,SAAjB,GAA6B,+BAA3C;AACA9C,cAAQ+C,IAAR,CAAa,CAAb;AACF,SAAK,YAAL;AACEjB,cAAQa,KAAR,CAAc,UAAU7C,OAAOgD,SAAjB,GAA6B,oBAA3C;AACA9C,cAAQ+C,IAAR,CAAa,CAAb;AACF;AACE,YAAMJ,KAAN;AARJ;AAUD,CAzBD;;AA2BA,SAASK,IAAT,GAAiB;AACf,sBAAUC,UAAV,GAAuBR,IAAvB,CAA4B,YAAM;AAChCX,YAAQC,GAAR,CAAY,+CAA+CmB,MAAM,GAAN,EAAW3C,IAAX,CAAgB,GAAhB,CAA3D;AACAP,YAAQ+C,IAAR,GAFgC,CAEjB;AAChB,GAHD;AAID;;AAED/C,QAAQwC,EAAR,CAAW,QAAX,EAAqBQ,IAArB","file":"main.js","sourcesContent":["import express from 'express'\r\nimport path from 'path'\r\nimport http from 'http'\r\nimport router from './router'\r\nimport websocket from './net/websocket.js'\r\n\r\nconst CONFIG = {\r\n  env: process.env.NODE_ENV || 'development',\r\n  root: __dirname,\r\n  port: 8080,\r\n  vueOptions: {\r\n    rootPath: path.join(__dirname, 'routes'),\r\n    // vueVersion: '2.5.13',\r\n    head: {\r\n      styles: [{ style: '/static/style.css' }],\r\n      metas: [\r\n        { name: 'viewport', content: 'width=device-width, initial-scale=1.0, user-scalable=no' }\r\n      ]\r\n    }\r\n  },\r\n  db: {\r\n    userDB: 'users.db',\r\n    session: 'session.db',\r\n    moodleDB: 'moodle.db'\r\n  },\r\n  session: {\r\n    secret: 'xuS7HgPzLPq7D2Fr',\r\n    resave: false,\r\n    saveUninitialized: false,\r\n    cookie: {\r\n      path: '/',\r\n      httpOnly: true,\r\n      maxAge: 365 * 24 * 3600 * 1000 // One year for example\r\n    }\r\n  }\r\n}\r\n\r\nvar app = express()\r\n\r\napp.locals.ENV = CONFIG.env\r\napp.locals.ENV_DEVELOPMENT = (CONFIG.env === 'development')\r\napp.locals.rootPath = process.env.ROOT_PATH\r\n\r\nconsole.log('Initializing app. Loading componentes...')\r\nrouter.init(app, CONFIG)\r\nconsole.log('Loaded.')\r\n\r\n// -------------------------BEGIN WEBSOCKET SETUP-------------\r\nconsole.log('Starting Server...')\r\n\r\nnew Promise((resolve, reject) => {\r\n  let server = http.createServer(app)\r\n\r\n  websocket.startServer(server, CONFIG) // Starting Websocket server\r\n\r\n  server.listen(CONFIG.port)\r\n  server.on('error', reject)\r\n  server.on('listening', resolve)\r\n}).then(() => {\r\n  console.log(`App started and running a ${CONFIG.env} server. Listening on ${CONFIG.port}`)\r\n}).catch((error) => {\r\n  if (error.syscall !== 'listen') {\r\n    throw error\r\n  }\r\n  // handle specific listen errors with friendly messages\r\n  switch (error.code) {\r\n    case 'EACCES':\r\n      console.error('Port ' + CONFIG.bind_port + ' requires elevated privileges')\r\n      process.exit(1)\r\n    case 'EADDRINUSE':\r\n      console.error('Port ' + CONFIG.bind_port + ' is already in use')\r\n      process.exit(1)\r\n    default:\r\n      throw error\r\n  }\r\n})\r\n\r\nfunction stop () {\r\n  websocket.stopServer().then(() => {\r\n    console.log('Stopped KIS Server... \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n' + Array(100).join('-'))\r\n    process.exit() // Stop after 1s -> Allows log to complete\r\n  })\r\n}\r\n\r\nprocess.on('SIGINT', stop)\r\n"]}